{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "virtualNetwork": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PermanentOctopus"
          }
        ]
      }
    },
    "subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.255.0/24",
        "VpcId": {
          "Ref": "virtualNetwork"
        }
      }
    },
    "internetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "routeTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "virtualNetwork"
        }
      }
    },
    "serverInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-7339e010",
        "InstanceType": {
          "Ref": "ServerInstanceType"
        },
        "KeyName": "SingaporeTestEnvironment",
        "Monitoring": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "ServerInstanceNameParameter"
            }
          },
          {
            "Key": "Application",
            "Value": "Permanent Octopus - Server"
          },
          {
            "Key": "Environment",
            "Value": "Test"
          },
          {
            "Key": "Lifetime",
            "Value": "Long-Lived"
          },
          {
            "Key": "Source",
            "Value": "Permanent Octopus"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet"
            },
            "GroupSet": [
              {
                "Ref": "serverSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ],
        "UserData": {
          "Ref": "ServerUserDataParameter"
        }
      }
    },
    "tentacleInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-7339e010",
        "InstanceType": "t2.micro",
        "KeyName": "SingaporeTestEnvironment",
        "Monitoring": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "TentacleInstanceNameParameter"
            }
          },
          {
            "Key": "Application",
            "Value": "Permanent Octopus - Tentacle"
          },
          {
            "Key": "Environment",
            "Value": "Test"
          },
          {
            "Key": "Lifetime",
            "Value": "Long-Lived"
          },
          {
            "Key": "Source",
            "Value": "Permanent Octopus"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet"
            },
            "GroupSet": [
              {
                "Ref": "tentacleSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ],
        "UserData": {
          "Ref": "TentacleUserDataParameter"
        }
      },
      "Condition": "CreateTentacle"
    },
    "elasticIPAddress": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": {
          "Ref": "serverInstance"
        },
        "Domain": "vpc"
      }
    },
    "vpcGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "virtualNetwork"
        },
        "InternetGatewayId": {
          "Ref": "internetGateway"
        }
      }
    },
    "subnetroute": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "routeTable"
        },
        "SubnetId": {
          "Ref": "subnet"
        }
      }
    },
    "route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "routeTable"
        },
        "GatewayId": {
          "Ref": "internetGateway"
        }
      },
      "DependsOn": "vpcGatewayAttachment"
    },
    "serverSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "serverSecurityGroup",
        "VpcId": {
          "Ref": "virtualNetwork"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": "54.206.66.130/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "10943",
            "ToPort": "10943",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "tentacleSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "tentacleSecurityGroup",
        "VpcId": {
          "Ref": "virtualNetwork"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": "54.206.66.130/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "10933",
            "ToPort": "10933",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerInstanceId": {
      "Description": "Server InstanceId of the newly created EC2 instance",
      "Value": {
        "Ref": "serverInstance"
      }
    },
    "TentacleInstanceId": {
      "Description": "Tentacle InstanceId of the newly created EC2 instance",
      "Value": {
        "Ref": "tentacleInstance"
      },
      "Condition": "CreateTentacle"
    },
    "ServerInstanceIPAddress": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "serverInstance",
          "PublicIp"
        ]
      }
    }
  },
  "Parameters": {
    "ServerInstanceType": {
      "Default": "t2.small",
      "Type": "String"
    },
    "ServerInstanceNameParameter": {
      "Default": "TO BE SPECIFIED",
      "Type": "String"
    },
    "ServerUserDataParameter": {
      "Default": "V3JpdGUtSG9zdCAiSGVsbG8hIg==",
      "Type": "String"
    },
    "TentacleInstanceNameParameter": {
      "Default": "TO BE SPECIFIED",
      "Type": "String"
    },
    "TentacleUserDataParameter": {
      "Default": "V3JpdGUtSG9zdCAiSGVsbG8hIg==",
      "Type": "String"
    }
  },
  "Conditions": {
    "CreateTentacle": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "TentacleInstanceNameParameter"
            },
            "TO BE SPECIFIED"
          ]
        }
      ]
    }
  },
  "Description": "Feature Branch"
}