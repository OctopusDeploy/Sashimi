using System;
using Octopus.Data.Resources;
using Sashimi.Server.Contracts.Accounts;

namespace Sashimi.AzureCloudService
{
    class AzureCertificateMayBeAutoGenerated : AccountStoreContributor
    {
        readonly CertificateEncoder certificateEncoder;
        readonly CertificateGenerator certificateGenerator;

        public AzureCertificateMayBeAutoGenerated(CertificateEncoder certificateEncoder, CertificateGenerator certificateGenerator)
        {
            this.certificateEncoder = certificateEncoder;
            this.certificateGenerator = certificateGenerator;
        }

        public override bool CanContribute(AccountDetailsResource resource)
        {
            return resource is AzureSubscriptionAccountResource;
        }

        public override void ModifyResource(AccountDetailsResource accountResource, string name)
        {
            var resource = (AzureSubscriptionAccountResource)accountResource;
            if (resource.CertificateBytes.HasValue)
                return;

            var generated = certificateGenerator.GenerateNew(CertificateExpectations.BuildOctopusAzureCertificateFullName(name));
            var exported = certificateEncoder.ToBase64String(generated);
            resource.CertificateBytes = new SensitiveValue {NewValue = exported};
        }
    }
}